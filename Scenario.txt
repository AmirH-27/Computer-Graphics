#include <windows.h> // for MS Windows
#include <GL/glut.h> // GLUT, include glu.h and gl.h

/* Handler for window-repaint event. Call back when the window first appears and
whenever the window needs to be re-painted. */
void building(){
    glColor3f(0.0f,0.0f,1.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(42, 127, 212);
    glVertex2f(-4.0f,8.5f);
    glVertex2f(-6.0f,8.0f);
    glVertex2f(-2.0f,7.5f);
    glVertex2f(0.0f,8.0f);

    glEnd();

    glColor3f(0.0f,0.0f,1.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(42, 127, 212);
    glVertex2f(-6.0f,8.0f);
    glVertex2f(-6.0f,1.55f);
    glVertex2f(-2.0f,1.0f);
    glVertex2f(-2.0f,7.5f);

    glEnd();

    glColor3f(0.0f,0.0f,1.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
   glColor3ub(42, 127, 212);
    glVertex2f(-2.0f,7.5f);
    glVertex2f(-2.0f,1.0f);
    glVertex2f(0.0f,1.5f);
    glVertex2f(0.0f,8.0f);

    glEnd();

    glColor3f(1.0f,1.0f,1.0f); // Clear the color buffer (background)
    glLineWidth(1.0);
    glBegin(GL_LINES);
    glColor3ub(42, 127, 212);
    glColor3ub(0, 0, 0);
    glVertex2f(-2.0f,7.5f);
    glVertex2f(-2.0f,1.0f);

    glVertex2f(-6.0f,8.0f);
    glVertex2f(-2.0f,7.5f);

    glVertex2f(-2.0f,7.5f);
    glVertex2f(0.0f,8.0f);

    glEnd();

    //windows

    glColor3f(0.0f,0.0f,0.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(164, 197, 212);
    glVertex2f(-5.75f,7.45f);
    glVertex2f(-5.75f,6.65f);
    glVertex2f(-4.45f,6.5f);
    glVertex2f(-4.45f,7.3f);

    glEnd();

    glColor3f(0.0f,0.0f,0.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(164, 197, 212);
    glVertex2f(-3.95f,7.20f);
    glVertex2f(-3.95f,6.40f);
    glVertex2f(-2.65f,6.25f);
    glVertex2f(-2.65f,7.05f);

    glEnd();

    glColor3f(0.0f,0.0f,0.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(164, 197, 212);
    glVertex2f(-5.75f,6.45f);
    glVertex2f(-5.75f,5.65f);
    glVertex2f(-4.45f,5.5f);
    glVertex2f(-4.45f,6.3f);

    glEnd();

    glColor3f(0.0f,0.0f,0.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(164, 197, 212);
    glVertex2f(-3.95f,6.20f);
    glVertex2f(-3.95f,5.40f);
    glVertex2f(-2.65f,5.25f);
    glVertex2f(-2.65f,6.05f);

    glEnd();

        glColor3f(0.0f,0.0f,0.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(164, 197, 212);
    glVertex2f(-5.75f,5.45f);
    glVertex2f(-5.75f,4.65f);
    glVertex2f(-4.45f,4.5f);
    glVertex2f(-4.45f,5.3f);

    glEnd();

    glColor3f(0.0f,0.0f,0.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(164, 197, 212);
    glVertex2f(-3.95f,5.20f);
    glVertex2f(-3.95f,4.40f);
    glVertex2f(-2.65f,4.25f);
    glVertex2f(-2.65f,5.05f);

    glEnd();

    glColor3f(0.0f,0.0f,0.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(164, 197, 212);
    glVertex2f(-5.75f,4.45f);
    glVertex2f(-5.75f,3.65f);
    glVertex2f(-4.45f,3.5f);
    glVertex2f(-4.45f,4.3f);

    glEnd();

    glColor3f(0.0f,0.0f,0.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(164, 197, 212);
    glVertex2f(-3.95f,4.20f);
    glVertex2f(-3.95f,3.40f);
    glVertex2f(-2.65f,3.25f);
    glVertex2f(-2.65f,4.05f);

    glEnd();

        glColor3f(0.0f,0.0f,0.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(164, 197, 212);
    glVertex2f(-5.75f,3.45f);
    glVertex2f(-5.75f,2.65f);
    glVertex2f(-4.45f,2.5f);
    glVertex2f(-4.45f,3.3f);

    glEnd();

    glColor3f(0.0f,0.0f,0.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(164, 197, 212);
    glVertex2f(-3.95f,3.20f);
    glVertex2f(-3.95f,2.40f);
    glVertex2f(-2.65f,2.25f);
    glVertex2f(-2.65f,3.05f);

    glEnd();

    //door

    glColor3f(93.0f,41.0f,6.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(93, 41, 6);
    glVertex2f(-4.95f,2.20f);
    glVertex2f(-4.95f,1.37f);
    glVertex2f(-3.65f,1.20f);
    glVertex2f(-3.65f,2.05f);
    glEnd();
}

void tree(){
    glColor3f(93.0f,41.0f,6.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(93, 41, 6);
    glVertex2f(2.0f,3.0f);
    glVertex2f(2.0f,1.0f);
    glVertex2f(2.75f,0.85f);
    glVertex2f(2.75f,2.85f);
    glEnd();

    //triangles
    glColor3f(93.0f,41.0f,6.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(40, 104, 85);
    glVertex2f(1.0f,3.0f);
    glVertex2f(3.75f,2.75f);
    glVertex2f(2.45f,4.0f);
    glEnd();
    glColor3f(93.0f,41.0f,6.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(40, 104, 85);
    glVertex2f(1.0f,2.5f);
    glVertex2f(3.75f,2.25f);
    glVertex2f(2.45f,3.5f);
    glEnd();
    glColor3f(93.0f,41.0f,6.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(40, 104, 85);
    glVertex2f(1.0f,2.f);
    glVertex2f(3.75f,1.75f);
    glVertex2f(2.45f,3.0f);
    glEnd();
}

void lampPost(){
    glColor3f(93.0f,41.0f,6.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(160,160,96);
    glVertex2f(-10.35f,0.0f);
    glVertex2f(-8.15f,0.67);
    glColor3ub(255,255,153);
    glVertex2f(-9.0f,4.35f);
    glEnd();

    glColor3f(93.0f,41.0f,6.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(160,160,96);
    glVertex2f(-8.35f,0.6f);
    glVertex2f(-6.1f,1.25f);
    glColor3ub(255,255,153);
    glVertex2f(-7.4f,4.65f);
    glEnd();

    // top
    glColor3f(0.0f,0.0f,0.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(0,0,0);

    glVertex2f(-7.15f,4.8f);
    glVertex2f(-7.25f,4.85f);
    glVertex2f(-9.25f,4.5f);
    glVertex2f(-9.15f,4.45f);

    glEnd();
    //side
    glColor3f(0.0f,0.0f,0.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(0, 0, 0);
    glVertex2f(-9.25f,4.50f);
    glVertex2f(-9.25f,4.3f);
    glVertex2f(-9.15f,4.25f);
    glVertex2f(-9.15f,4.45f);

    glEnd();

    //front side
    glColor3f(0.0f,0.0f,0.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(64,64,64);
    glVertex2f(-9.15f,4.45f);
    glVertex2f(-9.15f,4.25f);
    glVertex2f(-7.15f,4.6f);
    glVertex2f(-7.15f,4.85f);

    glEnd();

    //Pole
    glColor3f(0.0f,0.0f,0.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(64,64,64);
    glVertex2f(-8.35f,4.4f);
    glVertex2f(-8.35f,0.6f);
    glVertex2f(-8.15f,0.67f);
    glVertex2f(-8.15f,4.6f);

    glEnd();

    glLineWidth(1.0);
    glBegin(GL_LINES);
    glColor3ub(0, 0, 0);
    glVertex2f(-8.35f,4.4f);
    glVertex2f(-8.35f,0.6f);

    glVertex2f(-8.15f,4.45f);
    glVertex2f(-8.15f,0.67f);

    glVertex2f(-7.15f,4.8f);
    glVertex2f(-9.15f,4.45f);

    glVertex2f(-7.25f,4.85f);
    glVertex2f(-9.25f,4.5f);

    glVertex2f(-7.15f,4.8f);
    glVertex2f(-7.15f,4.6f);

    glVertex2f(-7.25f,4.85f);
    glVertex2f(-7.25f,4.75f);

    glVertex2f(-9.15f,4.45f);
    glVertex2f(-9.15f,4.25f);

    glVertex2f(-9.25f,4.5f);
    glVertex2f(-9.25f,4.3f);

    glVertex2f(-9.25f,4.5f);
    glVertex2f(-9.15f,4.45f);

    glVertex2f(-9.15f,4.25f);
    glVertex2f(-9.25f,4.3f);

    glVertex2f(-7.25f,4.85f);
    glVertex2f(-7.15f,4.8f);

    glEnd();

}
void bench(){
    glColor3f(0.0f,0.0f,1.0f); // Clear the color buffer (background)
    glBegin(GL_QUADS);// Draw a Red 1x1 Square centered at origin
    glColor3ub(191,143,0);
    glVertex2f(1.2f,1.6f);
    glVertex2f(1.2f,1.2f);
    glVertex2f(3.2f,0.7f);
    glVertex2f(3.2f,1.1f);
    glEnd();

    glColor3f(0.0f,0.0f,1.0f); // Clear the color buffer (background)
    glBegin(GL_QUADS);// Draw a Red 1x1 Square centered at origin
    glColor3ub(191,143,0);
    glVertex2f(3.2f,0.7f);
    glVertex2f(1.2f,1.2f);
    glVertex2f(0.8f,0.9f);
    glVertex2f(2.8f,0.4f);

    glEnd();

    glColor3f(0.0f,0.0f,1.0f); // Clear the color buffer (background)
    glBegin(GL_QUADS);// Draw a Red 1x1 Square centered at origin
    glColor3ub(191,143,0);
    glVertex2f(0.8f,0.9f);
    glVertex2f(0.8f,0.6f);
    glVertex2f(2.8f,0.1f);
    glVertex2f(2.8f,0.4f);

    glEnd();

    glColor3f(0.0f,0.0f,1.0f); // Clear the color buffer (background)
    glBegin(GL_QUADS);// Draw a Red 1x1 Square centered at origin
    glColor3ub(29,75,25);
    glVertex2f(3.2f,0.7f);
    glVertex2f(2.8f,0.4f);
    glVertex2f(2.8f,0.1f);
    glVertex2f(3.2f,0.4f);

    glEnd();

    glLineWidth(2.0);
    glBegin(GL_LINES);
    glColor3ub(191,143,0);
    glVertex2f(2.8f,0.1f);
    glVertex2f(3.2f,0.4f);

    glVertex2f(2.8f,0.4f);
    glVertex2f(2.8f,0.1f);
    glVertex2f(3.2f,0.7f);

    glColor3ub(0,0,0);
    glVertex2f(3.2f,0.4f);
    glVertex2f(0.8f,0.9f);
    glVertex2f(0.8f,0.6f);
    glVertex2f(2.8f,0.1f);
    glVertex2f(2.8f,0.4f);
    glVertex2f(0.8f,0.6f);
    glVertex2f(2.8f,0.1f);
    glVertex2f(0.8f,0.9f);
    glVertex2f(2.8f,0.4f);

    glVertex2f(3.2f,0.7f);
    glVertex2f(1.2f,1.2f);
    glVertex2f(0.8f,0.9f);
    glVertex2f(2.8f,0.4f);

    glVertex2f(1.2f,1.2f);
    glVertex2f(0.8f,0.9f);
    glVertex2f(3.2f,0.7f);
    glVertex2f(2.8f,0.4f);

}
void road(){
    //glColor3f(93.0f,41.0f,6.0f); // Clear the color buffer (background)
    glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(146,132,140);
    glVertex2f(-6.0f,1.55f);
    glVertex2f(-20.0f,-1.0f);
    glVertex2f(-20.0f,-4.0f);
    glVertex2f(-2.0f,1.0);
    glVertex2f(-6.0f,1.55f);
    glEnd();

}
void display() {
glClearColor(0.0f, 7.0f, 13.0f, 78.0f); // Set background color to black and opaque
glClear(GL_COLOR_BUFFER_BIT); // Clear the color buffer (background)
//glLineWidth(1.0);

 glBegin(GL_POLYGON);// Draw a Red 1x1 Square centered at origin
    glColor3ub(0, 102, 0);
    glVertex2f(-20.0f,-10.f);
    glVertex2f(15.0f,-10.0f);
    glColor3ub(55, 51, 48);
    glVertex2f(20.0f, 10.0f);
    glVertex2f(-20.0f,10.0);
    glEnd();

building();
tree();
lampPost();
road();
bench();
glEnd();
 glFlush(); // Render now
}

/* Main function: GLUT runs as a console application starting at main() */
int main(int argc, char** argv) {
glutInit(&argc, argv); // Initialize GLUT
glutCreateWindow("Lab Task 3"); // Create a window with the given title
glutInitWindowSize(320, 320);
gluOrtho2D(-20,15,-5,10); // Set the window's initial width & height
glutDisplayFunc(display); // Register display callback handler for window re-paint
glutMainLoop(); // Enter the event-processing loop
return 0;
}
