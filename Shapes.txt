
#include <windows.h> // for MS Windows
#include <GL/glut.h> // GLUT, include glu.h and gl.h

/* Handler for window-repaint event. Call back when the window first appears and
whenever the window needs to be re-painted. */
void display() {
glClearColor(1.0f, 1.0f, 1.0f, 1.0f); // Set background color to black and opaque
glClear(GL_COLOR_BUFFER_BIT); // Clear the color buffer (background)
glLineWidth(3.0);
// Draw a Red 1x1 Square centered at origin
glBegin(GL_LINES);
//glColor3f(1.0f,0.0f,0.0f);
glColor3b(0,0,0);

glVertex2f(7.0f,0.0f);
glVertex2f(-7.0f,0.0f);
glVertex2f(0.0f,7.0f);
glVertex2f(0.0f,-7.0f);

glEnd();

glBegin(GL_POLYGON);

glColor3ub(0, 255, 0);

glVertex2f(6.0f,3.0f);
glVertex2f(4.0f,5.0f);
glVertex2f(4.0f,4.0f);
glVertex2f(1.0f,4.0f);
glVertex2f(1.0f,2.0f);
glVertex2f(4.0f,2.0f);
glVertex2f(4.0f,1.0f);

glEnd();

glBegin(GL_POLYGON);

glColor3ub(255, 0, 0);

glVertex2f(-1.0f,1.0f);
glVertex2f(-1.0f,5.0f);
glVertex2f(-5.0f,5.0f);
glVertex2f(-5.0f,1.0f);

glEnd();

glBegin(GL_POLYGON);

glColor3ub(128, 0, 128);

glVertex2f(-1.0f,-1.0f);
glVertex2f(-5.0f,-3.0f);
glVertex2f(-1.0f,-5.0f);

glEnd();

glBegin(GL_POLYGON);

glColor3ub(255, 255, 0);

glVertex2f(3.0f,-1.0f);
glVertex2f(1.0f,-4.0f);
glVertex2f(5.0f,-4.0f);

glEnd();

 glFlush(); // Render now
}

/* Main function: GLUT runs as a console application starting at main() */
int main(int argc, char** argv) {
glutInit(&argc, argv); // Initialize GLUT
glutCreateWindow("Lab Task 1"); // Create a window with the given title
glutInitWindowSize(520, 520);
gluOrtho2D(-7,7,-7,7); // Set the window's initial width & height
glutDisplayFunc(display); // Register display callback handler for window re-paint
glutMainLoop(); // Enter the event-processing loop
return 0;
}


