
#include <windows.h>
#include <GL/glut.h>
#include <math.h>

void BackGround(){
    glBegin(GL_POLYGON);

    glColor3ub(12,112,171);
    glVertex2f(-7.0f,9.0f);
    glColor3ub(69,122,43);
    glVertex2f(-7.0f,1.0f);
    glVertex2f(7.0f,1.0f);
    glColor3ub(12,112,171);
    glVertex2f(7.0f,9.0f);

    glEnd();

    glBegin(GL_POLYGON);
    glColor3ub(69,122,43);
    glVertex2f(-7.0f,0.0f);
    glVertex2f(-7.0f,-9.0f);
    glVertex2f(-5.0f,-9.0f);
    glVertex2f(-3.0f,-1.0f);

    glEnd();

    glBegin(GL_POLYGON);
    glColor3ub(69,122,43);
    glVertex2f(7.0f,0.0f);
    glVertex2f(7.0f,-9.0f);
    glVertex2f(5.0f,-9.0f);
    glVertex2f(3.0f,-1.0f);

    glEnd();

}

void Road(){
        // horizontal road
    glBegin(GL_POLYGON);

    glColor3ub(109,103,101);
    glVertex2f(-7.0f,2.0f);
    glColor3ub(105,99,98);
    glVertex2f(-7.0f,-1.0f);
    glVertex2f(7.0f,-1.0f);
    glColor3ub(109,103,101);
    glVertex2f(7.0f,2.0f);

    glEnd();
    glBegin(GL_POLYGON);

    glColor3ub(206,109,29);
    glVertex2f(-7.0f,1.0f);
    glVertex2f(-7.0f,-0.025f);
    glVertex2f(7.0f,-0.025f);
    glVertex2f(7.0f,1.0f);

    glEnd();
// horizontal road that divides the orange
    glBegin(GL_POLYGON);

    glColor3ub(109,103,101);
    glVertex2f(-7.0f,0.75f);
    glColor3ub(105,99,98);
    glVertex2f(-7.0f,0.2f);
    glVertex2f(7.0f,0.2f);
    glColor3ub(109,103,101);
    glVertex2f(7.0f,0.75f);

    glEnd();
    //vertical road

    glBegin(GL_POLYGON);

    glColor3ub(143,132,124);
    glVertex2f(-0.5f,9.0f);
    glColor3ub(63,64,70);
    glVertex2f(-5.0f,-9.0f);
    glVertex2f(5.0f,-9.0f);
    glColor3ub(143,132,124);
    glVertex2f(0.5f,9.0f);

    glEnd();
//orange
    glBegin(GL_POLYGON);

    glColor3ub(206,109,29);
    glVertex2f(-0.05f,9.0f);
    glVertex2f(-0.4f,2.0f);
    glVertex2f(0.4f,2.0f);
    glVertex2f(0.05f,9.0f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(206,109,29);
    glVertex2f(-0.6f,-1.0f);
    glVertex2f(-1.0f,-9.0f);
    glVertex2f(1.0f,-9.0f);
    glVertex2f(0.6f,-1.0f);

    glEnd();
// middle line to divide orange line
    glBegin(GL_POLYGON);

    glColor3ub(109,103,101);
    glVertex2f(-0.02f,9.0f);
    glColor3ub(105,99,98);
    glVertex2f(-0.5f,-9.0f);
    glVertex2f(0.5f,-9.0f);
    glColor3ub(109,103,101);
    glVertex2f(0.02f,9.0f);

    glEnd();
}

void Lamp(){
    glLineWidth(45.0);
    glBegin(GL_LINES);
    glColor3ub(53,86,111);
    glVertex2f(0.0f,-2.0f);
    glVertex2f(0.0f,-6.0f);

    glVertex2f(-0.75f,-2.0f);
    glVertex2f(0.75f,-2.0f);

    glVertex2f(-0.2f,-6.0f);
    glVertex2f(0.2f,-6.0f);

    glColor3ub(53,86,111);
    glVertex2f(0.0f,3.0f);
    glVertex2f(0.0f,5.0f);

    glVertex2f(-0.5f,5.0f);
    glVertex2f(0.5f,5.0f);

    glVertex2f(-0.1f,3.0f);
    glVertex2f(0.1f,3.0f);

    glColor3ub(53,86,111);
    glVertex2f(0.0f,7.0f);
    glVertex2f(0.0f,8.0f);

    glVertex2f(-0.25f,8.0f);
    glVertex2f(0.25f,8.0f);

    glVertex2f(-0.05f,7.0f);
    glVertex2f(0.05f,7.0f);

    glEnd();
}

void TrafficSignals(){
    glLineWidth(35.0);
    glBegin(GL_LINES);
    glColor3ub(53,86,111);

    glVertex2f(3.0f,-1.0f);
    glVertex2f(3.0f,1.5f);

    glVertex2f(2.3f,2.0f);
    glVertex2f(2.3f,3.5f);

    glVertex2f(-3.0f,-1.0f);
    glVertex2f(-3.0f,1.5f);

    glVertex2f(-2.3f,2.0f);
    glVertex2f(-2.3f,3.5f);

    glEnd();
// Front traffic lights
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-2.96f,1.47f);
    glVertex2f(-2.05f,1.47f);
    glVertex2f(-2.05f,0.9f);
    glVertex2f(-2.96f,0.9f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(2.96f,1.47f);
    glVertex2f(2.86f,1.87f);
    glVertex2f(2.86f,1.37f);
    glVertex2f(2.96f,0.9f);

    glEnd();
// back
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(2.3f,3.47f);
    glVertex2f(2.3f,3.1f);
    glVertex2f(1.7f,3.1f);
    glVertex2f(1.7f,3.47f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-2.3f,3.47f);
    glVertex2f(-2.4f,3.27f);
    glVertex2f(-2.4f,2.87f);
    glVertex2f(-2.3f,3.07f);

    glEnd();
//Lights red
	glBegin(GL_POLYGON);
	for(int i=0;i<200;i++)
        {
            glColor3ub(255,0,0);
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r=0.1;
            float x = -2.8 + r * cos(A);
            float y = 1.2 + r * sin(A);
            glVertex2f(x, y);
        }

	glEnd();

	glBegin(GL_POLYGON);
	for(int i=0;i<200;i++)
        {
            glColor3ub(254,176,0);
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r=0.1;
            float x = -2.5 + r * cos(A);
            float y = 1.2 + r * sin(A);
            glVertex2f(x, y);
        }

	glEnd();

	glBegin(GL_POLYGON);
	for(int i=0;i<200;i++)
        {
            glColor3ub(25,175,26);
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r=0.1;
            float x = -2.2 + r * cos(A);
            float y = 1.2 + r * sin(A);
            glVertex2f(x, y);
        }

	glEnd();

}
void Buildings(){
//                                 buildings on the right 1
    glBegin(GL_POLYGON);

    glColor3ub(226,204,170);
    glVertex2f(3.0f,7.0f);
    glVertex2f(3.0f,3.0f);
    glVertex2f(4.0f,3.0f);
    glVertex2f(4.0f,7.0f);

    glEnd();
    glBegin(GL_POLYGON);

    glColor3ub(226,204,170);
    glVertex2f(3.0f,7.0f);
    glVertex2f(2.75f,7.25f);
    glVertex2f(2.75f,3.25f);
    glVertex2f(3.0f,3.0f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(206,185,150);
    glVertex2f(2.75f,7.25f);
    glVertex2f(3.0f,7.0f);
    glVertex2f(4.0f,7.0f);
    glVertex2f(3.75f,7.25f);

    glEnd();

    glLineWidth(1.0);
    glBegin(GL_LINES);
    glColor3ub(1,1,1);
    glVertex2f(3.0f,7.0f);
    glVertex2f(3.0f,3.0f);

    glVertex2f(2.75f,7.25f);
    glVertex2f(2.75f,3.25f);

    glVertex2f(2.75f,3.25f);
    glVertex2f(3.0f,3.0f);

    glVertex2f(3.0f,3.0f);
    glVertex2f(4.0f,3.0f);

    glVertex2f(2.75f,7.25f);
    glVertex2f(3.0f,7.0f);

    glVertex2f(3.0f,7.0f);
    glVertex2f(4.0f,7.0f);

    glEnd();
    //windows right
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(3.6f,6.5f);
    glVertex2f(3.6f,6.0f);
    glVertex2f(3.9f,6.0f);
    glVertex2f(3.9f,6.5f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(3.6f,5.5f);
    glVertex2f(3.6f,5.0f);
    glVertex2f(3.9f,5.0f);
    glVertex2f(3.9f,5.5f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(3.6f,4.5f);
    glVertex2f(3.6f,4.0f);
    glVertex2f(3.9f,4.0f);
    glVertex2f(3.9f,4.5f);

    glEnd();

    //window left
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(3.1f,6.5f);
    glVertex2f(3.1f,6.0f);
    glVertex2f(3.4f,6.0f);
    glVertex2f(3.4f,6.5f);

    glEnd();
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(3.1f,5.5f);
    glVertex2f(3.1f,5.0f);
    glVertex2f(3.4f,5.0f);
    glVertex2f(3.4f,5.5f);

    glEnd();
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(3.1f,4.5f);
    glVertex2f(3.1f,4.0f);
    glVertex2f(3.4f,4.0f);
    glVertex2f(3.4f,4.5f);

    glEnd();
    //Door
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(3.3f,3.5f);
    glVertex2f(3.3f,3.0f);
    glVertex2f(3.7f,3.0f);
    glVertex2f(3.7f,3.5f);

    glEnd();
      glBegin(GL_POLYGON);

    glColor3ub(47,47,47);
    glVertex2f(3.3f,3.0f);
    glVertex2f(3.6f,2.0f);
    glVertex2f(4.0f,2.0f);
    glVertex2f(3.7f,3.0f);

    glEnd();

    //                          building on the right 2

    glBegin(GL_POLYGON);

    glColor3ub(226,204,170);
    glVertex2f(5.0f,7.0f);
    glVertex2f(5.0f,3.0f);
    glVertex2f(6.0f,3.0f);
    glVertex2f(6.0f,7.0f);

    glEnd();
    glBegin(GL_POLYGON);

    glColor3ub(226,204,170);
    glVertex2f(5.0f,7.0f);
    glVertex2f(4.75f,7.25f);
    glVertex2f(4.75f,3.25f);
    glVertex2f(5.0f,3.0f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(206,185,150);
    glVertex2f(4.75f,7.25f);
    glVertex2f(5.0f,7.0f);
    glVertex2f(6.0f,7.0f);
    glVertex2f(5.75f,7.25f);

    glEnd();

    glLineWidth(1.0);
    glBegin(GL_LINES);
    glColor3ub(1,1,1);
    glVertex2f(5.0f,7.0f);
    glVertex2f(5.0f,3.0f);

    glVertex2f(4.75f,7.25f);
    glVertex2f(4.75f,3.25f);

    glVertex2f(4.75f,3.25f);
    glVertex2f(5.0f,3.0f);

    glVertex2f(5.0f,3.0f);
    glVertex2f(6.0f,3.0f);

    glVertex2f(4.75f,7.25f);
    glVertex2f(5.0f,7.0f);

    glVertex2f(5.0f,7.0f);
    glVertex2f(6.0f,7.0f);

    glEnd();
    //windows right
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(5.6f,6.5f);
    glVertex2f(5.6f,6.0f);
    glVertex2f(5.9f,6.0f);
    glVertex2f(5.9f,6.5f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(5.6f,5.5f);
    glVertex2f(5.6f,5.0f);
    glVertex2f(5.9f,5.0f);
    glVertex2f(5.9f,5.5f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(5.6f,4.5f);
    glVertex2f(5.6f,4.0f);
    glVertex2f(5.9f,4.0f);
    glVertex2f(5.9f,4.5f);

    glEnd();

    //window left
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(5.1f,6.5f);
    glVertex2f(5.1f,6.0f);
    glVertex2f(5.4f,6.0f);
    glVertex2f(5.4f,6.5f);

    glEnd();
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(5.1f,5.5f);
    glVertex2f(5.1f,5.0f);
    glVertex2f(5.4f,5.0f);
    glVertex2f(5.4f,5.5f);

    glEnd();
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(5.1f,4.5f);
    glVertex2f(5.1f,4.0f);
    glVertex2f(5.4f,4.0f);
    glVertex2f(5.4f,4.5f);

    glEnd();
       //Door
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(5.3f,3.5f);
    glVertex2f(5.3f,3.0f);
    glVertex2f(5.7f,3.0f);
    glVertex2f(5.7f,3.5f);

    glEnd();
// road from building to main road
    glBegin(GL_POLYGON);

    glColor3ub(47,47,47);
    glVertex2f(5.3f,3.0f);
    glVertex2f(5.6f,2.0f);
    glVertex2f(6.0f,2.0f);
    glVertex2f(5.7f,3.0f);

    glEnd();

    //                                 buildings on the left 1

       glBegin(GL_POLYGON);

    glColor3ub(226,204,170);
    glVertex2f(-3.0f,7.0f);
    glVertex2f(-3.0f,3.0f);
    glVertex2f(-4.0f,3.0f);
    glVertex2f(-4.0f,7.0f);

    glEnd();
    glBegin(GL_POLYGON);

    glColor3ub(226,204,170);
    glVertex2f(-3.0f,7.0f);
    glVertex2f(-2.75f,7.25f);
    glVertex2f(-2.75f,3.25f);
    glVertex2f(-3.0f,3.0f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(206,185,150);
    glVertex2f(-2.75f,7.25f);
    glVertex2f(-3.0f,7.0f);
    glVertex2f(-4.0f,7.0f);
    glVertex2f(-3.75f,7.25f);

    glEnd();

    glLineWidth(1.0);
    glBegin(GL_LINES);
    glColor3ub(1,1,1);
    glVertex2f(-3.0f,7.0f);
    glVertex2f(-3.0f,3.0f);

    glVertex2f(-2.75f,7.25f);
    glVertex2f(-2.75f,3.25f);

    glVertex2f(-2.75f,3.25f);
    glVertex2f(-3.0f,3.0f);

    glVertex2f(-3.0f,3.0f);
    glVertex2f(-4.0f,3.0f);

    glVertex2f(-2.75f,7.25f);
    glVertex2f(-3.0f,7.0f);

    glVertex2f(-3.0f,7.0f);
    glVertex2f(-4.0f,7.0f);

    glEnd();
    //windows right
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-3.6f,6.5f);
    glVertex2f(-3.6f,6.0f);
    glVertex2f(-3.9f,6.0f);
    glVertex2f(-3.9f,6.5f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-3.6f,5.5f);
    glVertex2f(-3.6f,5.0f);
    glVertex2f(-3.9f,5.0f);
    glVertex2f(-3.9f,5.5f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-3.6f,4.5f);
    glVertex2f(-3.6f,4.0f);
    glVertex2f(-3.9f,4.0f);
    glVertex2f(-3.9f,4.5f);

    glEnd();

    //window left
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-3.1f,6.5f);
    glVertex2f(-3.1f,6.0f);
    glVertex2f(-3.4f,6.0f);
    glVertex2f(-3.4f,6.5f);

    glEnd();
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-3.1f,5.5f);
    glVertex2f(-3.1f,5.0f);
    glVertex2f(-3.4f,5.0f);
    glVertex2f(-3.4f,5.5f);

    glEnd();
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-3.1f,4.5f);
    glVertex2f(-3.1f,4.0f);
    glVertex2f(-3.4f,4.0f);
    glVertex2f(-3.4f,4.5f);

    glEnd();
       //Door
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-3.3f,3.5f);
    glVertex2f(-3.3f,3.0f);
    glVertex2f(-3.7f,3.0f);
    glVertex2f(-3.7f,3.5f);

    glEnd();
      glBegin(GL_POLYGON);

    glColor3ub(47,47,47);
    glVertex2f(-3.3f,3.0f);
    glVertex2f(-3.1f,2.0f);
    glVertex2f(-3.5f,2.0f);
    glVertex2f(-3.7f,3.0f);

    glEnd();
    //                   building on the left 2

    glBegin(GL_POLYGON);

    glColor3ub(226,204,170);
    glVertex2f(-5.0f,7.0f);
    glVertex2f(-5.0f,3.0f);
    glVertex2f(-6.0f,3.0f);
    glVertex2f(-6.0f,7.0f);

    glEnd();
    glBegin(GL_POLYGON);

    glColor3ub(226,204,170);
    glVertex2f(-5.0f,7.0f);
    glVertex2f(-4.75f,7.25f);
    glVertex2f(-4.75f,3.25f);
    glVertex2f(-5.0f,3.0f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(206,185,150);
    glVertex2f(-4.75f,7.25f);
    glVertex2f(-5.0f,7.0f);
    glVertex2f(-6.0f,7.0f);
    glVertex2f(-5.75f,7.25f);

    glEnd();

    glLineWidth(1.0);
    glBegin(GL_LINES);
    glColor3ub(1,1,1);
    glVertex2f(-5.0f,7.0f);
    glVertex2f(-5.0f,3.0f);

    glVertex2f(-4.75f,7.25f);
    glVertex2f(-4.75f,3.25f);

    glVertex2f(-4.75f,3.25f);
    glVertex2f(-5.0f,3.0f);

    glVertex2f(-5.0f,3.0f);
    glVertex2f(-6.0f,3.0f);

    glVertex2f(-4.75f,7.25f);
    glVertex2f(-5.0f,7.0f);

    glVertex2f(-5.0f,7.0f);
    glVertex2f(-6.0f,7.0f);

    glEnd();
    //windows right
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-5.6f,6.5f);
    glVertex2f(-5.6f,6.0f);
    glVertex2f(-5.9f,6.0f);
    glVertex2f(-5.9f,6.5f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-5.6f,5.5f);
    glVertex2f(-5.6f,5.0f);
    glVertex2f(-5.9f,5.0f);
    glVertex2f(-5.9f,5.5f);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-5.6f,4.5f);
    glVertex2f(-5.6f,4.0f);
    glVertex2f(-5.9f,4.0f);
    glVertex2f(-5.9f,4.5f);

    glEnd();

    //window left
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-5.1f,6.5f);
    glVertex2f(-5.1f,6.0f);
    glVertex2f(-5.4f,6.0f);
    glVertex2f(-5.4f,6.5f);

    glEnd();
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-5.1f,5.5f);
    glVertex2f(-5.1f,5.0f);
    glVertex2f(-5.4f,5.0f);
    glVertex2f(-5.4f,5.5f);

    glEnd();
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-5.1f,4.5f);
    glVertex2f(-5.1f,4.0f);
    glVertex2f(-5.4f,4.0f);
    glVertex2f(-5.4f,4.5f);

    glEnd();
       //Door
    glBegin(GL_POLYGON);

    glColor3ub(1,1,1);
    glVertex2f(-5.3f,3.5f);
    glVertex2f(-5.3f,3.0f);
    glVertex2f(-5.7f,3.0f);
    glVertex2f(-5.7f,3.5f);

    glEnd();

      glBegin(GL_POLYGON);

    glColor3ub(47,47,47);
    glVertex2f(-5.3f,3.0f);
    glVertex2f(-5.1f,2.0f);
    glVertex2f(-5.5f,2.0f);
    glVertex2f(-5.7f,3.0f);

    glEnd();


}

void Vehical(){
    glBegin(GL_POLYGON);

    glColor3ub(0,0,255);
    glVertex2f(-4.2f,1.9f);
    glVertex2f(-4.3f,2.2f);
    glVertex2f(-4.8f,2.2f);
    glVertex2f(-4.8f,1.6f);
    glVertex2f(-4.0f,1.6f);
    glVertex2f(-4.0f,1.9f);

    glEnd();
    	glBegin(GL_POLYGON);
	for(int i=0;i<200;i++)
        {
            glColor3ub(1,1,1);
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r=0.1;
            float x = -4.6 + r * cos(A);
            float y = 1.6 + r * sin(A);
            glVertex2f(x, y);
        }

	glEnd();

	    	glBegin(GL_POLYGON);
	for(int i=0;i<200;i++)
        {
            glColor3ub(1,1,1);
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r=0.1;
            float x = -4.2 + r * cos(A);
            float y = 1.6 + r * sin(A);
            glVertex2f(x, y);
        }

	glEnd();

	    glBegin(GL_POLYGON);

    glColor3ub(255,0,0);
    glVertex2f(4.2f,-0.5f);
    glVertex2f(4.3f,-0.2f);
    glVertex2f(4.8f,-0.2f);
    glVertex2f(4.8f,-0.8f);
    glVertex2f(4.0f,-0.8f);
    glVertex2f(4.0f,-0.5f);

    glEnd();
    	glBegin(GL_POLYGON);
	for(int i=0;i<200;i++)
        {
            glColor3ub(1,1,1);
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r=0.1;
            float x = 4.6 + r * cos(A);
            float y = -0.8 + r * sin(A);
            glVertex2f(x, y);
        }

	glEnd();

	    	glBegin(GL_POLYGON);
	for(int i=0;i<200;i++)
        {
            glColor3ub(1,1,1);
            float pi=3.1416;
            float A=(i*2*pi)/200;
            float r=0.1;
            float x = 4.2 + r * cos(A);
            float y = -0.8 + r * sin(A);
            glVertex2f(x, y);
        }

	glEnd();
    glBegin(GL_POLYGON);

    glColor3ub(210,183,70);
    glVertex2f(-4.0f,-9.0f);
    glVertex2f(-3.9f,-8.0f);
    glVertex2f(-3.0f,-8.0f);
    glVertex2f(-3.1f,-9.0);

    glEnd();

    glBegin(GL_POLYGON);

    glColor3ub(210,183,70);
    glVertex2f(-3.0f,-8.0f);
    glVertex2f(-3.1f,-9.0);
    glVertex2f(-2.8f,-9.0f);
    glVertex2f(-3.1f,-8.0f);

    glEnd();

    glLineWidth(1.0);
    glBegin(GL_LINES);
    glColor3ub(1,1,1);

    glVertex2f(-3.0f,-8.0f);
    glVertex2f(-3.1f,-9.0);
    glEnd();


}
void display() {
    BackGround();
    Road();
    Lamp();
    TrafficSignals();
    Buildings();
    Vehical();
    glFlush(); // Render now
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutCreateWindow("Lab Task 4");
    glutInitWindowSize(1920, 1080);
    gluOrtho2D(-7,7,-9,9);
    glutDisplayFunc(display);
    glutMainLoop();
}


